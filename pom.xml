<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-parent</artifactId>
    <version>39</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.commons</groupId>
  <artifactId>commons-crypto</artifactId>
  <packaging>jar</packaging>
  <description>
Apache Commons Crypto is a cryptographic library optimized with AES-NI (Advanced Encryption
Standard New Instructions). It provides Java API for both cipher level and Java stream level.
Developers can use it to implement high performance AES encryption/decryption with the minimum
code and effort. Please note that Crypto doesn't implement the cryptographic algorithm such as
AES directly. It wraps to Openssl or JCE which implement the algorithms.

Features
-------------
+ Cipher API for low level cryptographic operations.
+ Java stream API (CryptoInputStream/CryptoOutputStream) for high level stream encyrption/decryption.
+ Both optimized with high performance AES encryption/decryption. (1400 MB/s - 1700 MB/s throughput in modern Xeon processors).
+ JNI-based implementation to achieve comparable performance to the native C++ version based on Openssl.
+ Portable across various operating systems (currently only Linux); Apache Commons Crypto loads the library according to your machine environment (It looks system properties, `os.name` and `os.arch`).
+ Simple usage. Add the commons-crypto-(version).jar file to your classpath.
  </description>
  <version>1.0.0-SNAPSHOT</version>
  <name>Apache Commons Crypto</name>
  <inceptionYear>2016</inceptionYear>
  <url>http://commons.apache.org/proper/commons-crypto</url>
  <issueManagement>
    <system>jira</system>
    <url>http://issues.apache.org/jira/browse/CRYPTO</url>
  </issueManagement>
  <scm>
    <connection>
      scm:git:http://git-wip-us.apache.org/repos/asf/commons-crypto.git
    </connection>
    <developerConnection>
      scm:git:https://git-wip-us.apache.org/repos/asf/commons-crypto.git
    </developerConnection>
    <url>
      https://git-wip-us.apache.org/repos/asf?p=commons-crypto.git
    </url>
  </scm>
  <ciManagement>
    <system>Jenkins</system>
    <url>https://builds.apache.org/search/?q=Commons-CRYPTO</url>
  </ciManagement>
  <distributionManagement>
    <site>
      <id>commons.site</id>
      <name>Apache Commons Site SVN</name>
      <url>scm:svn:${commons.scmPubUrl}</url>
    </site>
  </distributionManagement>
  <developers>
    <developer>
      <name>Aaron T Myers</name>
      <email>atm@apache.org</email>
      <id>atm</id>
    </developer>
    <developer>
      <name>Andrew Wang</name>
      <email>wang@apache.org</email>
      <id>wang</id>
    </developer>
    <developer>
      <name>Chris Nauroth</name>
      <email>cnauroth@apache.org</email>
      <id>cnauroth</id>
    </developer>
    <developer>
      <name>Colin P. McCabe</name>
      <email>cmccabe@apache.org</email>
      <id>cmccabe</id>
    </developer>
    <developer>
      <name>Dapeng Sun</name>
      <email>sdp@apache.org</email>
      <id>sdp</id>
    </developer>
    <developer>
      <name>Dian Fu</name>
      <email>dianfu@apache.org</email>
      <id>dianfu</id>
    </developer>
    <developer>
      <name>Dong Chen</name>
      <email>dongc@apache.org</email>
      <id>dongc</id>
    </developer>
    <developer>
      <name>Ferdinand Xu</name>
      <email>xuf@apache.org</email>
      <id>xuf</id>
    </developer>
    <developer>
      <name>Haifeng Chen</name>
      <email>haifengchen@apache.org</email>
      <id>haifengchen</id>
    </developer>
    <developer>
      <name>Marcelo Vanzin</name>
      <email>vanzin@apache.org</email>
      <id>vanzin</id>
    </developer>
    <developer>
      <name>Uma Maheswara Rao G</name>
      <email>umamahesh@apache.org</email>
      <id>umamahesh</id>
    </developer>
    <developer>
      <name>Yi Liu</name>
      <email>yliu@apache.org</email>
      <id>yliu</id>
    </developer>
  </developers>
  <properties>
    <!-- The property "target.name" is used to specify the ant target, The All target will use
    OSInfo.java to detect the OS info and arch to generate the native binary for detected platform.
    User is able to specify the platform by maven profiles.-->
    <target.name>all</target.name>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <maven-javadoc-plugin.version>2.8.1</maven-javadoc-plugin.version>
    <maven-source-plugin.version>2.3</maven-source-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <findbugs-maven-plugin.version>3.0.2</findbugs-maven-plugin.version>
    <junit.version>4.8.2</junit.version>
    <commons-logging.version>1.1.3</commons-logging.version>
    <slf4j-api.version>1.7.10</slf4j-api.version>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <commons.javadoc.java.link>http://download.oracle.com/javase/6/docs/api/</commons.javadoc.java.link>
    <commons.componentid>crypto</commons.componentid>
    <commons.release.version>1.0.0</commons.release.version>
    <commons.rc.version>RC1</commons.rc.version>
    <commons.release.desc>(Requires Java ${maven.compiler.target} or later)</commons.release.desc>
    <commons.jira.id>CRYPTO</commons.jira.id>
    <commons.jira.pid>12320024</commons.jira.pid>
    <commons.changes.onlyCurrentVersion>true</commons.changes.onlyCurrentVersion>
    <commons-build-plugin.version>1.6</commons-build-plugin.version>
  </properties>
  <profiles>
    <profile>
      <id>win32</id>
      <properties>
        <target.name>win32</target.name>
      </properties>
    </profile>
    <profile>
      <id>win64</id>
      <properties>
        <target.name>win64</target.name>
      </properties>
    </profile>
    <profile>
      <id>mac32</id>
      <properties>
        <target.name>mac32</target.name>
      </properties>
    </profile>
    <profile>
      <id>linux32</id>
      <properties>
        <target.name>linux32</target.name>
      </properties>
    </profile>
    <profile>
      <id>linux64</id>
      <properties>
        <target.name>linux64</target.name>
      </properties>
    </profile>
    <profile>
      <id>linux-arm</id>
      <properties>
        <target.name>linux-arm</target.name>
      </properties>
    </profile>
    <profile>
      <id>linux-armhf</id>
      <properties>
        <target.name>linux-armhf</target.name>
      </properties>
    </profile>
    <profile>
      <id>linux-aarch64</id>
      <properties>
        <target.name>linux-aarch64</target.name>
      </properties>
    </profile>
    <!-- FindBugs -->
    <profile>
      <id>findbugs</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>${findbugs-maven-plugin.version}</version>
            <configuration>
              <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
              <!--
              Enables analysis which takes more memory but finds more bugs.
              If you run out of memory, changes the value of the effort element
              to 'Low'.
              -->
              <effort>Max</effort>
              <failOnError>true</failOnError>
              <threshold>Low</threshold>
              <findbugsXmlOutput>true</findbugsXmlOutput>
              <xmlOutput>true</xmlOutput>
            </configuration>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>ant-contrib</groupId>
              <artifactId>ant-contrib</artifactId>
              <version>1.0b3</version>
              <exclusions>
                <exclusion>
                  <groupId>ant</groupId>
                  <artifactId>ant</artifactId>
                </exclusion>
              </exclusions>
            </dependency>
            <dependency>
              <groupId>org.apache.ant</groupId>
              <artifactId>ant-nodeps</artifactId>
              <version>1.8.1</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>nexus-staging-maven-plugin</artifactId>
          <version>${nexus-staging-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>make</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="make">
                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                         classpathref="maven.plugin.classpath"/>
                <exec executable="make" failonerror="true" dir="${project.basedir}">
                  <arg value="${target.name}"/>
                </exec>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>${commons.rat.version}</version>
        <configuration>
          <excludes>
            <exclude>.gitattributes</exclude>
            <exclude>.gitignore</exclude>
            <exclude>.git/**</exclude>
            <exclude>.idea/**</exclude>
            <exclude>**/build/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-build-plugin</artifactId>
        <version>${commons-build-plugin.version}</version>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${commons-logging.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j-api.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
